{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "native_deposit"
      ],
      "properties": {
        "native_deposit": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "native_settle"
      ],
      "properties": {
        "native_settle": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "native_withdraw"
      ],
      "properties": {
        "native_withdraw": {
          "type": "object",
          "required": [
            "amount",
            "coin_denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "coin_denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "native_liquidate"
      ],
      "properties": {
        "native_liquidate": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_supported_asset"
      ],
      "properties": {
        "add_supported_asset": {
          "type": "object",
          "required": [
            "asset_info_unvalidated",
            "asset_name"
          ],
          "properties": {
            "asset_info_unvalidated": {
              "$ref": "#/definitions/AssetInfoUnvalidated"
            },
            "asset_name": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_supported_asset"
      ],
      "properties": {
        "remove_supported_asset": {
          "type": "object",
          "required": [
            "asset_name"
          ],
          "properties": {
            "asset_name": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_admin"
      ],
      "properties": {
        "update_admin": {
          "type": "object",
          "required": [
            "new_admin"
          ],
          "properties": {
            "new_admin": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AssetInfoUnvalidated": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "future_asset"
          ],
          "properties": {
            "future_asset": {
              "type": "object",
              "required": [
                "asset_name",
                "collateralizeable",
                "contract_addr",
                "decimals",
                "ratio",
                "underlying"
              ],
              "properties": {
                "asset_name": {
                  "type": "string"
                },
                "collateralizeable": {
                  "type": "boolean"
                },
                "contract_addr": {
                  "type": "string"
                },
                "decimals": {
                  "$ref": "#/definitions/Uint128"
                },
                "ratio": {
                  "$ref": "#/definitions/Decimal"
                },
                "underlying": {
                  "$ref": "#/definitions/NormalAssetInfoUnvalidated"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "normal_asset"
          ],
          "properties": {
            "normal_asset": {
              "$ref": "#/definitions/NormalAssetInfoUnvalidated"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "NormalAssetInfoUnvalidated": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "c_w20_token"
          ],
          "properties": {
            "c_w20_token": {
              "type": "object",
              "required": [
                "asset_name",
                "collateralizeable",
                "contract_addr",
                "decimals",
                "ratio"
              ],
              "properties": {
                "asset_name": {
                  "type": "string"
                },
                "collateralizeable": {
                  "type": "boolean"
                },
                "contract_addr": {
                  "type": "string"
                },
                "decimals": {
                  "$ref": "#/definitions/Uint128"
                },
                "ratio": {
                  "$ref": "#/definitions/Decimal"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "collateralizeable",
                "decimals",
                "denom",
                "ratio"
              ],
              "properties": {
                "collateralizeable": {
                  "type": "boolean"
                },
                "decimals": {
                  "$ref": "#/definitions/Uint128"
                },
                "denom": {
                  "type": "string"
                },
                "ratio": {
                  "$ref": "#/definitions/Decimal"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
